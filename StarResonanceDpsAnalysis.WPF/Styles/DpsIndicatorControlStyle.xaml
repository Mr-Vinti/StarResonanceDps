<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:StarResonanceDpsAnalysis.WPF.Controls"
    xmlns:conv="clr-namespace:StarResonanceDpsAnalysis.WPF.Converters">

    <conv:PercentToWidthConverter x:Key="PercentToWidthConverter" />

    <Style TargetType="{x:Type controls:DpsIndicatorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DpsIndicatorControl}">
                    <Grid x:Name="Root" Background="Transparent">
                        <!--  track  -->
                        <Border
                            x:Name="PART_Track"
                            Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{Binding IndicatorBackground, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="Hidden" />

                        <!--  indicator, width calculated by converter  -->
                        <Rectangle
                            x:Name="PART_Indicator"
                            Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment="Left"
                            Fill="{Binding IndicatorForeground, RelativeSource={RelativeSource TemplatedParent}}"
                            RadiusX="{Binding CornerRadius.TopLeft, RelativeSource={RelativeSource TemplatedParent}}"
                            RadiusY="{Binding CornerRadius.TopLeft, RelativeSource={RelativeSource TemplatedParent}}">
                            <Rectangle.Width>
                                <MultiBinding Converter="{StaticResource PercentToWidthConverter}">
                                    <Binding Path="AnimatedPercentage" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding ElementName="Root" Path="ActualWidth" />
                                </MultiBinding>
                            </Rectangle.Width>
                        </Rectangle>

                        <ContentPresenter
                            x:Name="PART_Overlay"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Content="{Binding OverlayContent, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplate="{Binding OverlayTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            IsHitTestVisible="False" />

                        <!--  Custom Popup with proper mouse handling  -->
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            IsHitTestVisible="False"
                            Placement="MousePoint"
                            PlacementTarget="{Binding ElementName=Root}"
                            PopupAnimation="Fade"
                            StaysOpen="True">
                            <Border
                                MaxWidth="360"
                                Padding="6"
                                Background="#CC202020"
                                BorderThickness="0"
                                CornerRadius="4"
                                IsHitTestVisible="False">
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0.3"
                                        ShadowDepth="2" />
                                </Border.Effect>
                                <!--  Actual content  -->
                                <ContentControl
                                    Content="{Binding PopupContent, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding PopupTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsHitTestVisible="False" />
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Simple triggers without animations  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Track" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="True" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_Track" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>