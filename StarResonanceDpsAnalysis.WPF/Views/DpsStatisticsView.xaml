<Window
    x:Class="StarResonanceDpsAnalysis.WPF.Views.DpsStatisticsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behaviors="clr-namespace:StarResonanceDpsAnalysis.WPF.Behaviors"
    xmlns:ctrl="clr-namespace:StarResonanceDpsAnalysis.WPF.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:StarResonanceDpsAnalysis.WPF.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:viewModels="clr-namespace:StarResonanceDpsAnalysis.WPF.ViewModels"
    Title="DpsStatisticsForm"
    Width="320"
    Height="359"
    MinWidth="300"
    MinHeight="31"
    d:DataContext="{d:DesignInstance Type=viewModels:DpsStatisticsDesignTimeViewModel,
                                     IsDesignTimeCreatable=True}"
    ResizeMode="CanResize"
    Style="{StaticResource TransparentWindow}"
    mc:Ignorable="d">
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <!--  WindowChrome: 开启可拉伸边界  -->
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            GlassFrameThickness="0"
            ResizeBorderThickness="6"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <!-- <converters:PercentOfMaxConverter x:Key="PercentOfMaxConverter" /> -->
        <Style x:Key="TitleBar" TargetType="Border">
            <Setter Property="Background" Value="#CCBABABA" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="CornerRadius">
                <Setter.Value>
                    <CornerRadius
                        BottomLeft="0"
                        BottomRight="0"
                        TopLeft="{StaticResource MainCornerRadiusDouble}"
                        TopRight="{StaticResource MainCornerRadiusDouble}" />
                </Setter.Value>
            </Setter>

            <EventSetter Event="MouseLeftButtonDown" Handler="TitleBar_MouseLeftButtonDown" />
        </Style>

        <Style x:Key="StatisticTypeText" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#FFF" />
            <Setter Property="FontFamily" Value="pack://application:,,,/Assets/Fonts/#HarmonyOS Sans SC" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style BasedOn="{StaticResource IconButtonStyle}" TargetType="Button">
            <Setter Property="FontFamily" Value="pack://application:,,,/Assets/Fonts/#iconfont" />
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style x:Key="FooterContentBorder" TargetType="Border">
            <Setter Property="Background" Value="#CCBABABA" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="CornerRadius">
                <Setter.Value>
                    <CornerRadius
                        BottomLeft="{StaticResource MainCornerRadiusDouble}"
                        BottomRight="{StaticResource MainCornerRadiusDouble}"
                        TopLeft="0"
                        TopRight="0" />
                </Setter.Value>
            </Setter>

            <EventSetter Event="MouseLeftButtonDown" Handler="TitleBar_MouseLeftButtonDown" />

            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding
                            Converter="{StaticResource LessThanToBoolConverter}"
                            ConverterParameter="56"
                            Path="ActualHeight"
                            RelativeSource="{RelativeSource AncestorType=local:DpsStatisticsView}" />
                    </DataTrigger.Binding>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    To="0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="PercentageDataTemplate" DataType="{x:Type viewModels:StatisticDataViewModel}">
            <Grid HorizontalAlignment="Stretch">
                <!--  名次  -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="B" />
                    <ColumnDefinition Width="*" SharedSizeGroup="C" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="D" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="E" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    Margin="4,0,4,0"
                    VerticalAlignment="Center"
                    FontFamily="pack://application:,,,/Assets/Fonts/#SAO Welcome TT"
                    Foreground="White">
                    <TextBlock.Text>
                        <Binding Path="Index" UpdateSourceTrigger="PropertyChanged" />
                    </TextBlock.Text>
                </TextBlock>

                <!--  职业图标  -->
                <Image
                    Grid.Column="1"
                    Margin="4"
                    Source="{Binding Player.Class, Converter={StaticResource ClassesToIconConverter}, FallbackValue={StaticResource ClassesUnknownIcon}}" />

                <!--  昵称  -->
                <TextBlock
                    x:Name="Name"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    FontFamily="pack://application:,,,/Assets/Fonts/#HarmonyOS Sans SC"
                    Foreground="White"
                    Text="{Binding Player.Name}" />

                <!--  数值  -->
                <TextBlock
                    Grid.Column="3"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="pack://application:,,,/Assets/Fonts/#HarmonyOS Sans SC"
                    FontWeight="Bold"
                    Foreground="White">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource HumanReadableNumberConverter}">
                            <Binding Path="Value" />
                            <Binding Path="DataContext.NumberDisplayMode" RelativeSource="{RelativeSource AncestorType=Window}" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock
                    Grid.Column="4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="pack://application:,,,/Assets/Fonts/#HarmonyOS Sans SC"
                    FontWeight="Bold"
                    Foreground="White"
                    Text="{Binding Percent, StringFormat={}({0:P1})}" />

            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ProgressBarDataTemplate" DataType="{x:Type viewModels:StatisticDataViewModel}">
            <Grid Height="30" Margin="0">
                <Button
                    Margin="1"
                    Padding="0"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Background="Transparent"
                    BorderThickness="0"
                    Command="{Binding ItemClickCommand, RelativeSource={RelativeSource AncestorType=ctrl:SortedDpsControl}}"
                    CommandParameter="{Binding}"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False"
                    IsHitTestVisible="False"
                    IsTabStop="False"
                    OverridesDefaultStyle="True">

                    <!--  simple ControlTemplate so ContentPresenter stretches to available size  -->
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>

                    <!--  actual visual content, will now stretch to fill the button  -->
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <ctrl:DpsIndicatorControl
                            Grid.Column="1"
                            Margin="1"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            OverlayContent="{Binding}"
                            OverlayTemplate="{StaticResource PercentageDataTemplate}"
                            Percentage="{Binding PercentOfMax}">
                            <!-- <ctrl:DpsIndicatorControl.Percentage> -->
                            <!--  <MultiBinding Converter="{StaticResource PercentOfMaxConverter}"  -->
                            <!--  Mode="OneWay">  -->
                            <!--         <Binding Path="Value" UpdateSourceTrigger="PropertyChanged"/> -->
                            <!--         <Binding Path="DataContext.Slots.Values" RelativeSource="{RelativeSource AncestorType=Window}" UpdateSourceTrigger="PropertyChanged"/> -->
                            <!--     </MultiBinding> -->
                            <!-- </ctrl:DpsIndicatorControl.Percentage> -->
                        </ctrl:DpsIndicatorControl>
                    </Grid>
                </Button>
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <!--  半透明/圆角交给内部 Border  -->
    <Border Background="#99191919" Style="{StaticResource ShadowWindowBorder}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="*" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>
            <Border Style="{StaticResource TitleBar}">
                <!--  顶部栏,Grid 一般不设置属性  -->
                <Grid Margin="2">
                    <!--  统计类型标注  -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  左侧按钮  -->
                    <Button
                        x:Name="LeftButton"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Command="{Binding PreviousMetricTypeCommand}"
                        Content=""
                        FontSize="15" />
                    <TextBlock Grid.Column="1" Style="{StaticResource StatisticTypeText}">
                        <TextBlock.Text>
                            <MultiBinding Mode="OneWay" StringFormat="{}{0} ({1})">
                                <Binding Converter="{StaticResource StatisticTypeToStringConverter}" Path="StatisticIndex" />
                                <Binding Converter="{StaticResource ScopeTimeToStringConverter}" Path="ScopeTime" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <!--  右侧按钮  -->
                    <Button
                        x:Name="RightButton"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        Command="{Binding NextMetricTypeCommand}"
                        Content=""
                        FontSize="15" />
                    <!--  切换按钮  -->
                    <Button
                        x:Name="SwitchButton"
                        Grid.Column="3"
                        Command="{Binding ToggleScopeTimeCommand}"
                        Content=""
                        FontSize="12"
                        ToolTip="切换为：全程 / 当前"
                        ToolTipService.InitialShowDelay="200"
                        ToolTipService.Placement="Mouse"
                        ToolTipService.ShowDuration="3000" />

                    <!--  刷新按钮  -->
                    <StackPanel
                        Grid.Column="4"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <!--  设置按钮  -->
                        <Button
                            x:Name="RefreshButton"
                            Width="21"
                            Command="{Binding RefreshCommand}"
                            Content="&#xE644;">

                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseEnter">
                                    <b:InvokeCommandAction Command="{Binding RefreshButtonMouseEnteredCommand}" />
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseLeave">
                                    <b:InvokeCommandAction Command="{Binding RefreshButtonMouseLeavedCommand}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Button>
                        <!--  设置按钮  -->
                        <Button
                            x:Name="SetButton"
                            Width="24"
                            Content="&#xE600;">
                            <b:Interaction.Behaviors>
                                <behaviors:OpenContextMenuBehavior />
                            </b:Interaction.Behaviors>
                            <Button.ContextMenu>
                                <ContextMenu Style="{StaticResource ModernContextMenu}">
                                    <!--  只给 MenuItem 应用样式，Separator 不受影响  -->
                                    <ContextMenu.Resources>
                                        <Style BasedOn="{StaticResource ModernMenuItem}" TargetType="{x:Type MenuItem}" />
                                    </ContextMenu.Resources>
                                    <MenuItem
                                        Command="{Binding OpenSettingsCommand}"
                                        Header="设置"
                                        IsCheckable="false" />
                                    <Separator />

                                    <MenuItem
                                        Header="统计BOSS"
                                        IsChecked="False"
                                        Style="{StaticResource CheckableMenuItem}" />
                                    <MenuItem
                                        Header="显示总伤"
                                        IsChecked="False"
                                        Style="{StaticResource CheckableMenuItem}" />

                                    <MenuItem Header="个人模式" />
                                    <!--  记录设置  -->
                                    <MenuItem Header="记录设置" ItemContainerStyle="{StaticResource CheckableMenuItem}">
                                        <!--  pass a parameter (literal) to the command  -->
                                        <MenuItem
                                            Command="{Binding Options.SetMinimalDurationCommand}"
                                            Header="记录每一次"
                                            IsChecked="{Binding Options.MinimalDurationInSeconds}">
                                            <MenuItem.CommandParameter>
                                                <system:Int32>-1</system:Int32>
                                            </MenuItem.CommandParameter>
                                        </MenuItem>
                                        <MenuItem
                                            Command="{Binding Options.SetMinimalDurationCommand}"
                                            Header="不记录1分钟以下"
                                            IsChecked="{Binding Options.MinimalDurationInSeconds}">
                                            <MenuItem.CommandParameter>
                                                <system:Int32>60</system:Int32>
                                            </MenuItem.CommandParameter>
                                        </MenuItem>
                                        <!--  Click="RecordSettingsMenuItem_Click"  -->
                                        <MenuItem
                                            Command="{Binding Options.SetMinimalDurationCommand}"
                                            Header="不记录2分钟以下"
                                            IsChecked="{Binding Options.MinimalDurationInSeconds}">
                                            <MenuItem.CommandParameter>
                                                <system:Int32>120</system:Int32>
                                            </MenuItem.CommandParameter>
                                        </MenuItem>
                                    </MenuItem>
                                    <!--  历史记录  -->
                                    <MenuItem Header="历史记录" ItemContainerStyle="{StaticResource CheckableMenuItem}" />
                                    <!--  打桩模式  -->
                                    <MenuItem Header="打桩模式" ItemContainerStyle="{StaticResource CheckableMenuItem}">
                                        <MenuItem
                                            Click="PilingMenuItem_Click"
                                            Header="个人打桩 "
                                            IsCheckable="True" />
                                        <MenuItem
                                            Click="PilingMenuItem_Click"
                                            Header="协会打桩"
                                            IsCheckable="True" />
                                        <MenuItem
                                            Click="PilingMenuItem_Click"
                                            Header="极限打桩"
                                            IsCheckable="True" />
                                    </MenuItem>

                                    <MenuItem Header="技能日记" />

                                    <Separator />
                                    <MenuItem Command="{Binding ShutdownCommand}" Header="退出" />
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        <!--  隐藏按钮  -->
                        <Button
                            x:Name="PullButton"
                            Width="22"
                            Click="PullButton_Click"
                            Content="&#xE601;"
                            RenderTransformOrigin="0.5,0.5">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Button.RenderTransform>
                        </Button>
                        <!--  鼠标经过 显示测试到时放进度条上  -->
                        <Popup
                            x:Name="SkillPopup"
                            AllowsTransparency="True"
                            IsOpen="{Binding ShowSkillListPopup}"
                            Placement="MousePoint"
                            StaysOpen="True">
                            <ctrl:DpsDetailPopup SkillList="{Binding SkillList}" />
                        </Popup>

                    </StackPanel>
                </Grid>
            </Border>


            <ctrl:SortedDpsControl
                Grid.Row="1"
                Data="{Binding Slots, UpdateSourceTrigger=PropertyChanged}"
                ItemTemplate="{StaticResource ProgressBarDataTemplate}" />

            <Border
                x:Name="ContentBorder"
                Grid.Row="2"
                Style="{StaticResource FooterContentBorder}">
                <Grid Margin="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        Style="{StaticResource FooterTextContent}"
                        Text="[1]" />
                    <TextBlock
                        Grid.Column="1"
                        Margin="6,0,0,0"
                        HorizontalAlignment="Left"
                        Style="{StaticResource FooterTextContent}"
                        Text="{Binding Path=BattleDuration, StringFormat=mm:ss}" />
                    <TextBlock
                        Grid.Column="2"
                        Margin="0,0,4,0"
                        HorizontalAlignment="Right"
                        Style="{StaticResource FooterTextContent}"
                        Text="2.24万 DPS"
                        TextAlignment="Right" />
                </Grid>
            </Border>

        </Grid>
    </Border>


</Window>